{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/2020/creating-a-cypress-testing-environment-that-skips-authentication","result":{"data":{"markdownRemark":{"html":"<img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GFNDCpp1--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/rotbsbnt350idbzu76ah.jpg\" class=\"image\" />\n<h2>The Requirement</h2>\n<p>I recently was tasked with finding a way to skip authentication to easily test our apps using the great End to End testing tool <a href=\"https://www.cypress.io/\">Cypress</a>. Cypress does provide simple solutions for testing your app's authentication and authorization but in our scenario, we just wanted to skip it altogether. </p>\n<h2>Some Context</h2>\n<p>In our case, we wanted to use an in-house npm package that handles the authentication logic. All we need to do is just import that module into our <code>app.module</code> with an environment-specific identity configuration.</p>\n<p><strong>With Authentication</strong></p>\n<pre><code>\n  @NgModule({\n    imports: [InHouseIdentityModule.forRoot(environment.identityConfig)]\n  })\n  export class AppModule {}\n</code></pre>\n<p><strong>Without Authentication</strong></p>\n<pre><code>\n  @NgModule({\n    imports: [InHouseIdentityModule.forRoot(null)]\n  })\n  export class AppModule {}\n</code></pre>\n<p>As you can see above, if <em>null</em> is passed into the <code>InHouseIdentityModule.forRoot()</code> method, it will skip authentication for our app.</p>\n<h3>Creating e2e Environment</h3>\n<p>The first thing we need to do is create a new environment. We will create an <code>environment.e2e.ts</code> to go inside the <code>/environments</code> directory with the rest of our environment configurations. We should then copy any app-specific configurations needed in addition to adding <em>identityConfig</em> equal to null. It should look something like this...</p>\n<pre><code>\n  export const environment: IEnvironment = {\n    // your other app configurations\n    identityConfig: null\n  };\n</code></pre>\n<p>This will make sure that when the e2e configuration is used that null is passed into the identityModule and therefore skipping authentication. </p>\n<p>The next thing we need to do is configure <em>angular.json</em> to build our e2e configuration. </p>\n<pre><code>\n  {\n    \"projects\": {\n      \"appName\": {\n        \"architect\": {\n          \"build\": {\n            \"configuration\": {\n              \"e2e\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.e2e.ts\"\n                  }\n                ]\n              }\n            }\n          },\n          \"serve\": {\n            \"configurations\": {\n              \"e2e\" {\n                \"browserTarget\": \"auto:build:e2e\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n</code></pre>\n<p>Here we are telling angular to replace <code>environment.ts</code> with <code>environment.e2e.ts</code> when using the build configuration <em>e2e</em>. We then tell angular that when we serve the app with the <em>e2e</em> configuration, it will target the e2e build. </p>\n<p>Finally, let's create a script in our <code>package.json</code> to easily build and serve our app using the new e2e configuration. </p>\n<pre><code>\n  {\n    \"scripts\": {\n      \"start:e2e\": \"ng serve --configuration=\\\"e2e\\\"\",\n      \"build:e2e\": \"ng build --configuration=\\\"e2e\\\"\"\n    }\n  }\n</code></pre>\n<p>Now if we run our app by using <code>npm run start:e2e</code> the app will serve and it will skip authentication!</p>\n<p><strong>BONUS</strong>\nIf you need to be able to run cypress headlessly in your CI pipeline, you can add the following script to your <code>package.json</code>:</p>\n<p><code>\"cypress:ci\": \"start-server-and-test start:e2e http-get://localhost:4200 cypress:run\",</code></p>","frontmatter":{"date":"February 25, 2020","path":"/blog/2020/creating-a-cypress-testing-environment-that-skips-authentication","title":"Creating A Cypress Test Environment To Skip Authentication","videoUrl":null}}},"pageContext":{}},"staticQueryHashes":[]}